---

- name: configure first example
  hosts: localhost # This is where this task will run - not where the affected machines are
  tasks:

    - name: create key pair on aws using key_material obtained using 'file' lookup plugin
      amazon.aws.ec2_key:
        name: ucgajhe_aws_dev_keypair
        key_material: "{{ lookup('file', '/Users/jamespjh/.ssh/aws_rsa.pub') }}"

    - name: get the data about vpcs
      amazon.aws.ec2_vpc_net_info:
        filters:
          "tag:Name": ARC-playpen
      register: vpcs 

    - name: get the data about subnets
      amazon.aws.ec2_vpc_subnet_info:
        filters:
          vpc-id: "{{vpcs.vpcs[0].id}}"
          "tag:Name": "playpen-public-eu-west-2a"
      register: subnets

    - name: create a security group
      amazon.aws.ec2_security_group:
        name: course_security_group
        description: course security group
        vpc_id: "{{vpcs.vpcs[0].id}}"
        region: eu-west-2
        rules:
          - proto: tcp
            ports: 22
            cidr_ip: 38.242.173.2/32
            rule_desc: allow all IP on SSH

    - name: create the first course instance
      amazon.aws.ec2_instance:
        name: ucgajhe-dev-instance
        key_name: ucgajhe_aws_dev_keypair
        vpc_subnet_id: "{{subnets.subnets[0].subnet_id}}"
        instance_type: t2.micro
        security_group: course_security_group
        network:
          assign_public_ip: true
        image_id: ami-0f9bfd7d2738e70d5
        tags:
          Owner: ucgajhe
      register: instance

    - name: create a storage volume for the data and attach it to the instance
      amazon.aws.ec2_vol:
        instance: "{{instance.instance_ids[0]}}"
        delete_on_termination: true
        tags:
          Owner: ucgajhe
        volume_type: standard
        volume_size: 1024 #GiB
        name: datastorage # prevent recreation if it exists

- name: on the device, get the data volume mounted and ready to use
  hosts: aws_ec2
  tasks:
    - name: create a mount point for the data volume
      ansible.builtin.file:
        path: data/
        state: directory
        mode: '0755' 
    - name: format the volume as ext3
      community.general.filesystem:
        dev: /dev/xvdf
        fstype: ext3
      become: true
    - name: mount the filesystem
      ansible.posix.mount:
        name: data
        src: /dev/xvdf
        fstype: ext3
        state: mounted 
      become: true
    - name: change the owner back to ec2-user after mounting
      become: true
      ansible.builtin.file:
        path: data/
        state: directory
        mode: 0755
        owner: ec2-user

