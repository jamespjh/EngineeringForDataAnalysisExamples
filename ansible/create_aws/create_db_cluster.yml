- name: configure our DB example
  hosts: localhost # This is where this task will run - not where the affected machines are
  tasks:

    - name: get the data about vpcs
    # https://docs.ansible.com/ansible/latest/collections/amazon/aws/ec2_vpc_net_info_module.html
      amazon.aws.ec2_vpc_net_info:
        filters:
          "tag:Name": ARC-playpen
      register: vpcs 

    - name: create a security group
      # https://docs.ansible.com/ansible/latest/collections/amazon/aws/ec2_security_group_module.html
      amazon.aws.ec2_security_group:
        name: course_db_security_group
        description: course security group
        vpc_id: "{{vpcs.vpcs[0].id}}"
        region: eu-west-2
        rules:
          - proto: tcp
            ports: 5432
            cidr_ip: 38.242.0.0/16
            rule_desc: allow home IP on Postgres
          - proto: tcp
            ports: 5432
            cidr_ip: 144.82.0.0/16
            rule_desc: allow UCL IP on Postgres
            


      register: security_group      

    - name: get the data about subnets
      amazon.aws.ec2_vpc_subnet_info:
        filters:
          vpc-id: "{{vpcs.vpcs[0].id}}"
          "tag:Access": Public
      register: subnets

    - name: Add a subnet group
      # Databases need to exist in more than one subnet, as an AWS policy.
      # These need to be *all* public if the DB is to be publicly accessible.
      amazon.aws.rds_subnet_group:
        state: present
        name: course-db-subnet-group
        description: Course DB subnet group
        subnets: "{{subnets.subnets | map(attribute='subnet_id')}}"

    - name: Create cluster
    # https://docs.ansible.com/ansible/latest/collections/amazon/aws/rds_cluster_module.html
      amazon.aws.rds_cluster:
        cluster_id: "molecule-cluster"
        state: present
        engine: aurora-postgresql # Note the aurora engine - AWS's replicated cluster
        backup_retention_period: 1 #days
        port: 5432 #the usual port for Postgres
        username: jamespjh
        password: TeachingDataEngineeringInsecurely
        vpc_security_group_ids: "{{security_group.group_id}}"
        db_subnet_group_name: course-db-subnet-group
        tags:
          Owner: ucgajhe
          Type: exemplar
      register: cluster


    - name: Create the primary 
       # https://docs.ansible.com/ansible/latest/collections/amazon/aws/rds_instance_module.html
      amazon.aws.rds_instance:
        db_cluster_identifier: molecule-cluster
        db_instance_identifier: "cluster-primary"
        db_instance_class: db.t3.medium
        publicly_accessible: true
        engine: aurora-postgresql
      register: database

    - name: Create the replicates 
       # https://docs.ansible.com/ansible/latest/collections/amazon/aws/rds_instance_module.html
      amazon.aws.rds_instance:
        db_cluster_identifier: molecule-cluster
        db_instance_identifier: "cluster-replicate-{{item}}"
        db_instance_class: db.t3.medium
        publicly_accessible: true
        engine: aurora-postgresql
      loop: "{{range(2)}}"
      register: replicates
