
- name: Set up the private key so the clients can ssh to the host
  ansible.builtin.copy:
    dest: /home/ec2-user/.ssh/id_rsa
    src: "/Users/jamespjh/.ssh/cluster-key"
    mode: '600'

- name: Install yum packages
  ansible.builtin.yum:
    name: "{{ packages }}"
  become: true
  vars:
    packages:
    - python
    - python-pip
    - unzip
    - git
    - wget
  async: 60 # Run in parallel on each remote node rather than sequential
  poll: 1
- name: install this package from from git
  ansible.builtin.pip:
    name: git+https://github.com/jamespjh/EngineeringForDataAnalysisExamples.git
    state: forcereinstall
  async: 60 # Run in parallel on each remote node rather than sequential
  poll: 5
- name: get the manifest on each client
  ansible.builtin.get_url:
    url: "http://{{hostvars['localhost'].host_info.instances[0].private_ip_address}}/data/manifest.txt"
    dest: /home/ec2-user/manifest.txt
  async: 60 # Run in parallel on each remote node rather than sequential
  poll: 1

- name: generate a partial manifest on each client
  ansible.builtin.shell: "awk '!((NR+{{rank}}) %{{size}})' manifest.txt > manifest_local.txt"
- name: make a local corpus folder on the client to keep the local files to analyse in
  ansible.builtin.file:
    path: data/local_corpus
    state: directory
    mode: 0755 
- name: Create temp folder for incomplete downloads on larger volume
  ansible.builtin.file:
    path: data/tmp
    state: directory
    mode: 0755